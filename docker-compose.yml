version: '3.8'

services:
  socket-server:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SOCKET_PORT=8080
      - JWT_SECRET=${JWT_SECRET:-default-secret-key-change-in-production}
      - SOCKET_DEBUG=${SOCKET_DEBUG:-false}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./socket", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - socket-network

  # Optional: Redis for scaling (future feature)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - socket-network
    profiles:
      - scaling

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - socket-server
    restart: unless-stopped
    networks:
      - socket-network
    profiles:
      - production

volumes:
  redis-data:

networks:
  socket-network:
    driver: bridge
